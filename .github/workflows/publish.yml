# Links & Resources
#
# - https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
# - https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages#publishing-packages-to-github-packages

name: publish
on:
  pull_request_target:
    types: [labeled, opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write
  statuses: write
  checks: write
  deployments: write

jobs:
  canary:
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'joshblack/actions-security' && contains(github.event.pull_request.labels.*.name, 'Deploy Canary') }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
      - name: Version
        run: echo "::set-output name=version::$(git rev-parse --short HEAD)"
        id: version
      - run: npm ci
      - name: Run npm publish
        id: publish
        run: |
          cd packages/add
          echo "$(jq '.version = "0.0.0-${{ steps.version.outputs.version }}"' package.json )" > package.json
          npm publish --tag canary
          echo "::set-output name=package::$(jq -r .name package.json)@${{ steps.version.outputs.version }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/github-script@v6
        with:
         script: |
           const { pull_request, repository } = context.payload;
           await github.rest.repos.createCommitStatus({
             owner: repository.owner.login,
             repo: repository.name,
             sha: pull_request.head.sha,
             state: 'success',
             context: 'publish / npm',
             description: `v0.0.0-${{ steps.version.outputs.version }}`,
             target_url: `https://unpkg.com/${{ steps.publish.outputs.package }}/`
           });
      - uses: actions/github-script@v6
        with:
          script: |
            const { pull_request, repository } = context.payload;
            const deployment = await github.rest.repos.createDeployment({
              owner: repository.owner.login,
              repo: repository.name,
              ref: pull_request.head.ref,
              environment: 'npm',
              required_contexts: ['ci'],
            });
            await github.rest.repos.createDeploymentStatus({
              owner: repository.owner.login,
              repo: repository.name,
              deployment_id: deployment.id,
              state: 'success',
              log_url: 'https://github.com/joshblack/actions-security/pkgs/npm/add',
              description: `v0.0.0-${{ steps.version.outputs.version }}`,
            });
